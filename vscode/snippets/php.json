{
	// Place your snippets for php here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// },
	"Insert echo <pre> tag": {
		"prefix": "pre",
		"body": [
			"echo '<pre>';",
			"print_r($1);",
			"echo '</pre>';"
		],
		"description": "Insert echo <pre> tag"
	},
	"Insert echo <br> tag": {
		"prefix": "br",
		"body": [
			"echo '<br>';",
		],
		"description": "Insert echo <br> tag"
	},
	"Insert echo <PHP_EOL> tag": {
		"prefix": "eol",
		"body": [
			"echo PHP_EOL;",
		],
		"description": "Insert echo <PHP_EOL> tag"
	},
	"Getter": {
		"prefix": "__get",
		"body": [
			"public function __get(\\$attr) {",
			"\treturn \\$this->\\$attr;",
			"}"
		],
		"description": "Insert magic method __get()"
	},
	"Setter": {
		"prefix": "__set",
		"body": [
			"public function __set(\\$attr, \\$value) {",
			"\t\\$this->\\$attr = \\$value;",
			"}"
		],
		"description": "Insert magic method __set()"
	},
	"Template query": {
		"prefix": "query class",
		"body": [
			"public function $1() {",
			"\t\\$query = '",
			"\t';",
			"\t",
			"\t\\$stmt = \\$this->db->prepare(\\$query);",
			"\t\\$stmt->bindValue(':value', \\$this->value);",
			"\t\\$stmt->execute();",
			"\t",
			"\treturn \\$stmt->fetchAll(\\PDO::FETCH_ASSOC);",
			"}"
		],
		"description": "Insert query template"
	},
}